<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://coppertop-6.github.io//</id><title>H4ck1ng, L3@rn1ng, 8logg1ng @nd $tuff</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2023-03-16T06:43:17+02:00</updated> <author> <name>TBA</name> <uri>https://coppertop-6.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://coppertop-6.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://coppertop-6.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 TBA </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Remote Process Injection</title><link href="https://coppertop-6.github.io//posts/Process_Injection/" rel="alternate" type="text/html" title="Remote Process Injection" /><published>2023-03-14T19:00:00+02:00</published> <updated>2023-03-16T06:42:59+02:00</updated> <id>https://coppertop-6.github.io//posts/Process_Injection/</id> <content src="https://coppertop-6.github.io//posts/Process_Injection/" /> <author> <name>TBA</name> </author> <category term="blog" /> <summary> What is process injection and why do we need it? Process injection is the act of creating a copy of your shellcode in the current process and copying it across to the memory space of a different process and remotely executing that code. There are mulitiple ways of getting initial access during a Red Team campaign, but, through whichever means you get a successful beacon out to your control se... </summary> </entry> <entry><title>Testing JWTs</title><link href="https://coppertop-6.github.io//posts/JWT/" rel="alternate" type="text/html" title="Testing JWTs" /><published>2023-03-06T19:00:00+02:00</published> <updated>2023-03-07T10:34:02+02:00</updated> <id>https://coppertop-6.github.io//posts/JWT/</id> <content src="https://coppertop-6.github.io//posts/JWT/" /> <author> <name>TBA</name> </author> <category term="blog" /> <summary> Pentesting JSON Web Tokens (JWT) JSON Web Tokens (JWTs) are a popular method for implementing authentication and authorization in modern web applications. JWTs are compact and self-contained, making them easy to use and transmit as a URL parameter, cookie value, or in the HTTP Authorization header. However, like any other security mechanism, JWTs can be vulnerable to attacks if not implemented... </summary> </entry> <entry><title>Creating a Dropper in C</title><link href="https://coppertop-6.github.io//posts/Windows_Dropper/" rel="alternate" type="text/html" title="Creating a Dropper in C" /><published>2023-02-19T19:00:00+02:00</published> <updated>2023-02-20T12:58:44+02:00</updated> <id>https://coppertop-6.github.io//posts/Windows_Dropper/</id> <content src="https://coppertop-6.github.io//posts/Windows_Dropper/" /> <author> <name>TBA</name> </author> <category term="blog" /> <summary> In this post we will take a very high level approach to creating a dropper for Windows. The structure of the dropper can take the form of 3 templates, each using a different structure of the portable executable to execute your shellcode. A dropper is just an application/binary/PE that delivers and executes your payload/Shellcode on the target system. What is a Portable Executable (PE) a PE is... </summary> </entry> <entry><title>Difference Between IDOR and Authorization Bypass</title><link href="https://coppertop-6.github.io//posts/AuthbypassIDOR/" rel="alternate" type="text/html" title="Difference Between IDOR and Authorization Bypass" /><published>2023-02-14T19:00:00+02:00</published> <updated>2023-02-16T09:30:02+02:00</updated> <id>https://coppertop-6.github.io//posts/AuthbypassIDOR/</id> <content src="https://coppertop-6.github.io//posts/AuthbypassIDOR/" /> <author> <name>TBA</name> </author> <category term="blog" /> <summary> Understanding the Difference Between IDOR and Authorization Bypass When it comes to web application security, it’s important to understand the various vulnerabilities that can be exploited by attackers to gain unauthorized access to sensitive information or perform malicious actions. Two common types of vulnerabilities that are often confused are Insecure Direct Object Reference (IDOR) and Aut... </summary> </entry> <entry><title>Executing Unmanaged Code in Memory</title><link href="https://coppertop-6.github.io//posts/ExecutingCode/" rel="alternate" type="text/html" title="Executing Unmanaged Code in Memory" /><published>2023-02-08T19:00:00+02:00</published> <updated>2023-02-10T08:30:06+02:00</updated> <id>https://coppertop-6.github.io//posts/ExecutingCode/</id> <content src="https://coppertop-6.github.io//posts/ExecutingCode/" /> <author> <name>TBA</name> </author> <category term="blog" /> <summary> Difference between P/Invoke &amp;amp; D/Invoke With the ever increasing effectiveness of detection tools on the Blue Team side, more sophisticated ways of executing unmanaged code is needed on the Red Team side. Powershell has long been a go-to for Red Teamers, but has also been heavily scrutinized by detective capabilities and, as such, much of the Offensive tradecraft has moved over to the flexi... </summary> </entry> </feed>
